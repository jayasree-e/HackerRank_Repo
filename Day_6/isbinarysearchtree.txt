/* Hidden stub code will pass a root argument to the function below. Complete the function to solve the challenge. Hint: you may want to write one or more helper functions.  

The Node class is defined as follows:
    class Node {
    int data;
    Node left;
    Node right;
     }
*/
    public static ArrayList<Integer> inOrder(Node root, ArrayList<Integer> arr) {
        Node temp = root;
        if(temp.left != null) {
            arr = inOrder(temp.left, arr);
        }
        arr.add(temp.data);
        if(temp.right != null) {
            arr = inOrder(temp.right,arr);
        }
        return(arr);
    }
    public static boolean isSorted(ArrayList<Integer> array) {
    boolean result = true;
    for(int i = 0; i <array.size()-1; i++) {
        if(array.get(i) >= array.get(i+1)) {
            result = false;
            break;
        }
    }
    return result;
    }
    boolean checkBST(Node root) {
        Node temp = root;
        boolean flag = true;
        ArrayList<Integer> arr = new ArrayList<Integer>();
        arr = inOrder(root,arr);
        if(!isSorted(arr)) {
            flag=false;
        }
        return flag;
    }